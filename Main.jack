// Welcome to Gravity Wars!

class Main {

  function void main() {

    var Settings settings;
    var GXEngine gx;
    var PXEngine px;
    var GameEngine myGame;
    var ObjectManager OM;
    var AdvancedMath mx;

    var GravitySink gs1, gs2, gs3, gs4, gs5;
    var Player ps1, ps2;
    var Player fooPlayer;
    var PlayerSprite fooSprite;

    var int i;
    var int playerTurn;
    var int foo,bar;

    // load engines
    let settings = Settings.new();
    let mx = AdvancedMath.new();
    let OM = ObjectManager.new(settings);
    let gx = GXEngine.new(settings, mx, OM);
    let px = PXEngine.new(settings, mx, OM);
    let myGame = GameEngine.new(settings, gx, px, mx, OM);

    let i = settings.getPlayerSpriteSideLength()+1;
    // create game objects
    let gs1 = GravitySink.new(10000, 3000, 20, 20);
    let gs2 = GravitySink.new(2000, 10000, 10, 10);
    let gs3 = GravitySink.new(20000, 20000, 15, 15);
    let gs4 = GravitySink.new(30000, 15000, 15, 15);
    let gs5 = GravitySink.new(25000, 4000, 25, 25);
    //let ps1 = Player.new("1",3000, 3000, 180, i,0);
    //let ps2 = Player.new("2",15000, 15000, 60, i,0);


    while(true) {
      //do Output.printInt(settings.getscreenSizeX()*settings.getworldResolutionX());

    //let foo=Keyboard.readInt("Mod: ");
    //let bar=Keyboard.readInt("Mod: ");
    do Sys.wait(50);
    do Output.printInt(mx.random(0,10000));
    do Output.printString("  ");

    }


    do gx.doIntro();

    do myGame.generateUniverse(settings, OM, 200, 2);

    // register game object into the object manager
    do OM.registerGravitySink(gs1);
    do OM.registerGravitySink(gs2);
    do OM.registerGravitySink(gs3);
    do OM.registerGravitySink(gs4);
    do OM.registerGravitySink(gs5);
    //do OM.registerPlayer(ps1);
    //do OM.registerPlayer(ps2);



    let playerTurn=0;
    while (OM.playersStillAlive()>1)
    {
      let fooPlayer=OM.getPlayer(playerTurn);
      do myGame.takeTurn(fooPlayer);
      let playerTurn=playerTurn+1;
      if (playerTurn > (settings.getMaxPlayers()-1)) { let playerTurn=0;}
    }




    let i=0;
    //if (ps1.getIsDead() & ps2.getIsDead()) { let i=0; }
    //if (ps1.getIsDead() & ~ps2.getIsDead()) { let i=2; }
    //if (~ps1.getIsDead() & ps2.getIsDead()) { let i=1; }

    do gx.displayGameResult(i);


    return;
  }
}
