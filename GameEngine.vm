function GameEngine.new 1
push constant 7
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push this 0
call Settings.getMaxBullets 1
call Array.new 1
pop this 4
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
call Settings.getMaxBullets 1
lt
not
if-goto WHILE_END0
push local 0
push this 4
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 1
pop this 2
push argument 2
pop this 1
push pointer 0
return
function GameEngine.takeTurn 4
push argument 0
pop pointer 0
push argument 1
call Player.getSpriteAttributes 1
pop this 5
push constant 0
pop local 3
label WHILE_EXP0
push local 3
not
not
if-goto WHILE_END0
push pointer 0
call GameEngine.__getInput__ 1
pop local 0
push local 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 5
call Attributes.getRotation 1
pop local 1
push this 0
call Settings.getthrusterAcceleration 1
pop local 2
push this 1
push this 5
push local 2
push local 1
call PXEngine.applyAcceleration 4
pop temp 0
label IF_FALSE0
push local 0
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 5
call Attributes.getRotation 1
push constant 180
add
pop local 1
push this 0
call Settings.getthrusterAcceleration 1
pop local 2
push this 1
push this 5
push local 2
push local 1
call PXEngine.applyAcceleration 4
pop temp 0
label IF_FALSE1
push local 0
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
call Settings.getRotationSensativity 1
push constant 1
neg
call Math.multiply 2
pop local 1
push this 1
push this 5
push local 1
call PXEngine.applyRotation 3
pop temp 0
label IF_FALSE2
push local 0
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
call Settings.getRotationSensativity 1
pop local 1
push this 1
push this 5
push local 1
call PXEngine.applyRotation 3
pop temp 0
label IF_FALSE3
push local 0
push constant 5
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 6
call String.new 1
push constant 115
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
push pointer 0
push this 5
call GameEngine.__shoot__ 2
pop temp 0
label IF_FALSE4
push this 0
call Settings.getTimeStep 1
pop local 1
push this 1
push local 1
call PXEngine.stepForward 2
pop temp 0
push this 2
call GXEngine.drawAllObjects 1
pop temp 0
push local 1
call Sys.wait 1
pop temp 0
push pointer 0
call GameEngine.checkForCollisions 1
pop temp 0
push argument 1
call Player.getSpriteAttributes 1
pop this 5
push this 1
push this 5
call PXEngine.detectCollision 2
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop local 3
push local 1
call Output.printInt 1
pop temp 0
label IF_FALSE5
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function GameEngine.__shoot__ 6
push argument 0
pop pointer 0
push this 0
call Settings.getBulletRadius 1
pop local 3
push constant 20
pop local 4
push argument 1
call Attributes.getPx 1
pop local 1
push argument 1
call Attributes.getPy 1
pop local 2
push local 1
push local 2
push constant 0
push constant 0
push local 3
call Bullet.new 5
pop local 0
push pointer 0
push local 0
call GameEngine.registerBullet 2
pop temp 0
push this 2
push local 0
call GXEngine.registerBullet 2
pop temp 0
push this 1
push local 0
call PXEngine.registerBullet 2
pop temp 0
push local 0
call Bullet.getIsDead 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Bullet.dispose 1
pop temp 0
goto IF_END0
label IF_FALSE0
push local 0
call Bullet.getAttributes 1
pop this 5
push argument 1
call Attributes.getRotation 1
pop local 5
push this 1
push this 5
push local 4
push local 5
call PXEngine.applyAcceleration 4
pop temp 0
label IF_END0
push constant 0
return
function GameEngine.__getInput__ 2
push argument 0
pop pointer 0
call Keyboard.keyPressed 0
pop local 0
push this 0
push local 0
call Settings.getDesiredAction 2
pop local 1
push local 1
return
function GameEngine.killBullet 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
call GameEngine.unregisterBullet 2
pop temp 0
push this 2
push argument 1
call GXEngine.unregisterBullet 2
pop temp 0
push this 1
push argument 1
call PXEngine.unregisterBullet 2
pop temp 0
push argument 1
call Bullet.dispose 1
pop temp 0
push constant 0
return
function GameEngine.checkForCollisions 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 4
add
pop pointer 1
push that 0
push constant 0
eq
not
push local 0
push this 0
call Settings.getMaxBullets 1
lt
and
not
if-goto WHILE_END0
push local 0
push this 4
add
pop pointer 1
push that 0
pop this 6
push this 6
call Bullet.agePlusOne 1
pop temp 0
push this 0
call Settings.getBulletActivationAge 1
pop local 2
push this 6
call Bullet.getAge 1
push local 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
call Bullet.getAttributes 1
pop this 5
push this 1
push this 5
call PXEngine.detectCollision 2
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 6
call GameEngine.killBullet 2
pop temp 0
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function GameEngine.registerBullet 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 4
add
pop pointer 1
push that 0
push constant 0
eq
not
push local 0
push this 0
call Settings.getMaxBullets 1
lt
and
not
if-goto WHILE_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
push this 0
call Settings.getMaxBullets 1
push constant 1
sub
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 0
not
call Bullet.setIsDead 2
pop temp 0
goto IF_END0
label IF_FALSE0
push local 0
push this 4
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push constant 0
return
function GameEngine.unregisterBullet 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 4
add
pop pointer 1
push that 0
push argument 1
eq
not
push local 0
push this 4
add
pop pointer 1
push that 0
push constant 0
eq
not
and
push local 0
push this 0
call Settings.getMaxBullets 1
lt
and
not
if-goto WHILE_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
push this 4
add
pop pointer 1
push that 0
push argument 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 4
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push constant 0
return
