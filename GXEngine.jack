// Graphics Engine
// Destorys all drawable objects when destroyed.

class GXEngine {

  field Settings settings;
  field Array gravitySinkList;

  constructor GXEngine new(Settings gameSettings) {
    var int i;

    let settings=gameSettings;
    let gravitySinkList = Array.new(settings.getMaxGravitySinks());

    // initialize the objectList Array with zeros. This list terminates
    // with a zero.
    let i=0;
    while (i<settings.getMaxGravitySinks()) {
      let gravitySinkList[i] = 0;
      let i=i+1;
    }

    return this;
  }

  method void registerGravitySink(GravitySink newGravitySink) {
    // adds an gravitySink to the list

    var int i;
    let i = 0;
    while(~(gravitySinkList[i] = 0) & (i < settings.getMaxGravitySinks()) ) {
      let i=i+1;
    }
    let gravitySinkList[i] = newGravitySink;

    return;
  }

  method void drawAllObjects() {
    // draws everything in its object lists
    var int i;

    // draw gravitySinks
    let i = 0;
    while(~(gravitySinkList[i] = 0) & (i < settings.getMaxGravitySinks()) ) {
      do drawGravitySink(gravitySinkList[i]);
      let i=i+1;
    }

    return;
  }


  method void drawGravitySink(GravitySink gs) {
    // draws a single gravitySink
    var int x,y,r;
    var Attributes gsAttributes;

    let gsAttributes = gs.getAttributes();
    let x = gsAttributes.getPx();
    let y = gsAttributes.getPy();
    let r = gsAttributes.getRadius();

    do Screen.setColor(true);
    do Screen.drawCircle(x, y, r);
   return;
  }

  method void eraseGravitySink(GravitySink gs) {
    // erases a single gravitySink
    var int x,y,r;
    var Attributes gsAttributes;

    let gsAttributes = gs.getAttributes();
    let x = gsAttributes.getPx();
    let y = gsAttributes.getPy();
    let r = gsAttributes.getRadius();

    do Screen.setColor(false);
    do Screen.drawCircle(x, y, r);
   return;
  }


  method void dispose() {
    // This will destroy this object as well as all objects
    // registered with it.
    var int i;
    var GravitySink gs;

    // destroy gravitySinkList
    let i=0;
    while (i<settings.getMaxGravitySinks()) {
      let gs = gravitySinkList[i];
      do gs.dispose();
      let i=i+1;
    }

    // now suicide
    do Memory.deAlloc(this);
    return;
  }

}
